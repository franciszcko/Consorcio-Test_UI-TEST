// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.1.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CrossPlatformEATest.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Consultar Famrmacias de turno")]
    public partial class ConsultarFamrmaciasDeTurnoFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "BuscarFarmaciasPorComuna.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Consultar Famrmacias de turno", @"Feature: Consultar Famrmacias de turno 
Escenario: como un usuario que necesita saber las farmacias de turno 


Dado que quiero saber las farmacias de turno ingreso a la aplicación ""URL""
Cuando la página ""nombre de página"" carga 
Entonces Se despliegan las comunas y nombres de las farmacias
Cuando yo selecciono una comuna y el nombre de una farmacia
Entonces se muestran las farmacias de turno de esa marca y comuna 

Criterios de aceptación 
1.- La consulta debe visualizar los siguientes campos: 
	a. Dirección 
	b. Telefono
	c. Latitud 
	d. Longitud 

2.- Arquitectura debe ser una api rest full 
3.- El código debe estar en repositorio público 
4.- Debe contener pruebas unitarias automáticas.
5.- Deben Realizarse pruebas funcionales de sistema automatizadas 
6.- Cuando se carga la página debe permitir seleccionar comuna y nombre de farmacia, no puede realizar consultas si no recibe ambos parámetros 
7.- CUando se carga la página deben cargarse las comunas y los nombre de farmacia ", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("como un usuario que necesita saber las farmacias de turno")]
        [NUnit.Framework.TestCaseAttribute("CERRILLOS", "CRUZ VERDE", "773", null)]
        [NUnit.Framework.TestCaseAttribute("LAS CONDES", "CRUZ VERDE", "1102,1103,1104,1105", null)]
        public virtual void ComoUnUsuarioQueNecesitaSaberLasFarmaciasDeTurno(string comuna, string farmacia, string local_Id, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("como un usuario que necesita saber las farmacias de turno", null, exampleTags);
#line 27
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 28
testRunner.Given("que quiero saber las farmacias de turno ingreso a la aplicación", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 29
testRunner.When("la página \"Buscar Farmacias\" carga", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 30
testRunner.Then("Se despliegan las comunas y nombres de las farmacias", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 31
testRunner.When(string.Format("yo selecciono una comuna \'{0}\' y el nombre de una farmacia \'{1}\' y presiono el bo" +
                            "ton \"Buscar\"", comuna, farmacia), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 32
testRunner.Then(string.Format("se muestran las farmacias \'{0}\' de turno de esa marca y comuna \'{1}\' y validar la" +
                            " siguiente data \'{2}\'", farmacia, comuna, local_Id), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
